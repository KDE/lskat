# KDE tags expanded automatically by am_edit - $Revision$ 
# Makefile.in generated automatically by automake 1.4a from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

####### kdevelop will overwrite this part!!! (begin)##########


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_FLAG =
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AS = @AS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_RPATH = @KDE_RPATH@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
LD = @LD@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBSOCKET = @LIBSOCKET@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KFORMULA = @LIB_KFORMULA@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_MEDIATOOL = @LIB_MEDIATOOL@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NM = @NM@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PAMINC = @PAMINC@
PAMLIBPATHS = @PAMLIBPATHS@
PAMLIBS = @PAMLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
TOPSUBDIRS = @TOPSUBDIRS@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes = @all_includes@
all_libraries = @all_libraries@
idldir = @idldir@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_cgidir = @kde_cgidir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_toolbardir = @kde_toolbardir@
kde_wallpaperdir = @kde_wallpaperdir@
micodir = @micodir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@
# claim, which subdirectories you want to install
# you can add here more. This one gets installed 
bin_PROGRAMS = lskat 
lskat_SOURCES = msgdlg.cpp aboutdlgdata.cpp aboutdlg.cpp networkdlg.cpp namedlg.cpp KRemoteConnect.cpp KRSocket.cpp KProcessConnect.cpp KMessageEntry.cpp KInteractiveConnect.cpp KInputChildProcess.cpp KEMessage.cpp KEInput.cpp KConnectEntry.cpp KChildConnect.cpp lskatview.cpp lskatdoc.cpp lskat.cpp main.cpp 
lskat_LDADD = -lkfile -lkdeui -lkdecore -lqt -lXext -lX11 $(LIBSOCKET)

####### kdevelop will overwrite this part!!! (end)############
# this 10 paths are KDE specific. Use them:
# kde_htmldir       Where your docs should go to. (contains lang subdirs)
# kde_appsdir       Where your application file (.kdelnk) should go to. 
# kde_icondir       Where your icon should go to.
# kde_minidir       Where your mini icon should go to.
# kde_datadir       Where you install application data. (Use a subdir)
# kde_locale        Where translation files should go to.(contains lang subdirs)
# kde_cgidir        Where cgi-bin executables should go to.
# kde_confdir       Where config files should go to.
# kde_mimedir       Where mimetypes should go to.
# kde_toolbardir    Where general toolbar icons should go to.
# kde_wallpaperdir  Where general wallpapers should go to.

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

#>- lskat_METASOURCES = AUTO

# the library search path. 
lskat_LDFLAGS = $(all_libraries) $(KDE_RPATH)

# them while "make clean", use CLEANFILES
DISTCLEANFILES = $(lskat_METASOURCES)

EXTRA_DIST = index.html main.cpp lskat.cpp lskat.h lskatdoc.cpp lskatdoc.h lskatview.cpp lskatview.h resource.h lskat.desktop large-lskat.xpm lskat.xpm mini-lskat.xpm KChildConnect.cpp KChildConnect.h KConnectEntry.cpp KConnectEntry.h KConnectTypes.h KEInput.cpp KEInput.h KEMessage.cpp KEMessage.h KInputChildProcess.cpp KInputChildProcess.h KInteractiveConnect.cpp KInteractiveConnect.h KMessageEntry.cpp KMessageEntry.h KProcessConnect.cpp KProcessConnect.h KRSocket.cpp KRSocket.h KRemoteConnect.cpp KRemoteConnect.h namedlg.cpp namedlg.h networkdlg.cpp networkdlg.h aboutdlg.cpp aboutdlg.h aboutdlgdata.cpp msgdlg.cpp msgdlg.h 

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
#>- lskat_OBJECTS =  msgdlg.o aboutdlgdata.o aboutdlg.o networkdlg.o \
#>- namedlg.o KRemoteConnect.o KRSocket.o KProcessConnect.o KMessageEntry.o \
#>- KInteractiveConnect.o KInputChildProcess.o KEMessage.o KEInput.o \
#>- KConnectEntry.o KChildConnect.o lskatview.o lskatdoc.o lskat.o main.o
#>+ 7
@KDE_USE_FINAL_FALSE@lskat_OBJECTS = msgdlg.o aboutdlgdata.o aboutdlg.o networkdlg.o \
namedlg.o KRemoteConnect.o KRSocket.o KProcessConnect.o KMessageEntry.o \
KInteractiveConnect.o KInputChildProcess.o KEMessage.o KEInput.o \
KConnectEntry.o KChildConnect.o lskatview.o lskatdoc.o lskat.o main.o\
networkdlg.moc.o aboutdlg.moc.o lskatdoc.moc.o namedlg.moc.o lskatview.moc.o msgdlg.moc.o lskat.moc.o 
@KDE_USE_FINAL_TRUE@lskat_OBJECTS = lskat.all_cpp.o 
lskat_final_OBJECTS = lskat.all_cpp.o 
lskat_DEPENDENCIES = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(lskat_SOURCES)
OBJECTS = $(lskat_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps lskat/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps lskat/Makefile
	cd $(top_srcdir) && perl am_edit lskat-0.9/lskat/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

lskat: $(lskat_OBJECTS) $(lskat_DEPENDENCIES)
	@rm -f lskat
	$(CXXLINK) $(lskat_LDFLAGS) $(lskat_OBJECTS) $(lskat_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = lskat

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
KChildConnect.o: KChildConnect.cpp KChildConnect.h KEMessage.h \
	KMessageEntry.h KConnectTypes.h KChildConnect.moc
KConnectEntry.o: KConnectEntry.cpp KConnectEntry.h KRemoteConnect.h \
	KEMessage.h KMessageEntry.h KConnectTypes.h KRSocket.h \
	KChildConnect.h KProcessConnect.h KInteractiveConnect.h
KEInput.o: KEInput.cpp KEInput.h KConnectEntry.h KRemoteConnect.h \
	KEMessage.h KMessageEntry.h KConnectTypes.h KRSocket.h \
	KChildConnect.h KProcessConnect.h KInteractiveConnect.h \
	KEInput.moc
KEMessage.o: KEMessage.cpp KEMessage.h KMessageEntry.h KConnectTypes.h
KInputChildProcess.o: KInputChildProcess.cpp KInputChildProcess.h \
	KEMessage.h KMessageEntry.h KConnectTypes.h KChildConnect.h \
	KInputChildProcess.moc
KInteractiveConnect.o: KInteractiveConnect.cpp KInteractiveConnect.h \
	KEMessage.h KMessageEntry.h KConnectTypes.h KChildConnect.h \
	KInteractiveConnect.moc
KMessageEntry.o: KMessageEntry.cpp KMessageEntry.h KConnectTypes.h
KProcessConnect.o: KProcessConnect.cpp KProcessConnect.h KEMessage.h \
	KMessageEntry.h KConnectTypes.h KChildConnect.h \
	KProcessConnect.moc
KRSocket.o: KRSocket.cpp ../config.h KRSocket.h KRSocket.moc
KRemoteConnect.o: KRemoteConnect.cpp KRemoteConnect.h KEMessage.h \
	KMessageEntry.h KConnectTypes.h KRSocket.h KChildConnect.h \
	KRemoteConnect.moc
aboutdlg.o: aboutdlg.cpp aboutdlg.h lskat.h ../config.h KEInput.h \
	KConnectEntry.h KRemoteConnect.h KEMessage.h KMessageEntry.h \
	KConnectTypes.h KRSocket.h KChildConnect.h KProcessConnect.h \
	KInteractiveConnect.h
aboutdlg.moc.o: aboutdlg.moc.cpp aboutdlg.h
aboutdlgdata.o: aboutdlgdata.cpp aboutdlg.h lskat.h ../config.h \
	KEInput.h KConnectEntry.h KRemoteConnect.h KEMessage.h \
	KMessageEntry.h KConnectTypes.h KRSocket.h KChildConnect.h \
	KProcessConnect.h KInteractiveConnect.h
lskat.o: lskat.cpp lskat.h ../config.h KEInput.h KConnectEntry.h \
	KRemoteConnect.h KEMessage.h KMessageEntry.h KConnectTypes.h \
	KRSocket.h KChildConnect.h KProcessConnect.h \
	KInteractiveConnect.h lskatview.h lskatdoc.h resource.h \
	namedlg.h networkdlg.h aboutdlg.h msgdlg.h
lskat.moc.o: lskat.moc.cpp lskat.h ../config.h KEInput.h KConnectEntry.h \
	KRemoteConnect.h KEMessage.h KMessageEntry.h KConnectTypes.h \
	KRSocket.h KChildConnect.h KProcessConnect.h \
	KInteractiveConnect.h
lskatdoc.o: lskatdoc.cpp lskatdoc.h ../config.h lskat.h KEInput.h \
	KConnectEntry.h KRemoteConnect.h KEMessage.h KMessageEntry.h \
	KConnectTypes.h KRSocket.h KChildConnect.h KProcessConnect.h \
	KInteractiveConnect.h lskatview.h
lskatdoc.moc.o: lskatdoc.moc.cpp lskatdoc.h ../config.h lskat.h \
	KEInput.h KConnectEntry.h KRemoteConnect.h KEMessage.h \
	KMessageEntry.h KConnectTypes.h KRSocket.h KChildConnect.h \
	KProcessConnect.h KInteractiveConnect.h
lskatview.o: lskatview.cpp lskatview.h ../config.h lskat.h KEInput.h \
	KConnectEntry.h KRemoteConnect.h KEMessage.h KMessageEntry.h \
	KConnectTypes.h KRSocket.h KChildConnect.h KProcessConnect.h \
	KInteractiveConnect.h lskatdoc.h
lskatview.moc.o: lskatview.moc.cpp lskatview.h ../config.h lskat.h \
	KEInput.h KConnectEntry.h KRemoteConnect.h KEMessage.h \
	KMessageEntry.h KConnectTypes.h KRSocket.h KChildConnect.h \
	KProcessConnect.h KInteractiveConnect.h
main.o: main.cpp lskat.h ../config.h KEInput.h KConnectEntry.h \
	KRemoteConnect.h KEMessage.h KMessageEntry.h KConnectTypes.h \
	KRSocket.h KChildConnect.h KProcessConnect.h \
	KInteractiveConnect.h
msgdlg.o: msgdlg.cpp msgdlg.h
msgdlg.moc.o: msgdlg.moc.cpp msgdlg.h
namedlg.o: namedlg.cpp namedlg.h
namedlg.moc.o: namedlg.moc.cpp namedlg.h
networkdlg.o: networkdlg.cpp networkdlg.h
networkdlg.moc.o: networkdlg.moc.cpp networkdlg.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am: install-data-local
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS uninstall-local
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

#>- clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
#>- 		clean-generic mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-final   clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-local install-data-am install-data install-am \
install uninstall-local uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


messages:

install-data-local:
#>- 	$(mkinstalldirs) $(kde_htmldir)/en
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en
#>- 	$(mkinstalldirs) $(kde_htmldir)/en/lskat
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/lskat
#>- 	$(INSTALL_DATA) index.html $(kde_htmldir)/en/lskat/index.html
#>+ 1
	$(INSTALL_DATA) index.html $(DESTDIR)$(kde_htmldir)/en/lskat/index.html

	$(mkinstalldirs) $(kde_appsdir)/Games/
	$(INSTALL_DATA) lskat.desktop $(kde_appsdir)/Games/lskat.desktop
	$(mkinstalldirs) $(kde_icondir)/locolor/32x32/apps/
	$(INSTALL_DATA) lskat.xpm $(kde_icondir)/locolor/32x32/apps/lskat.xpm
	$(mkinstalldirs) $(kde_icondir)/locolor/16x16/apps/
	$(INSTALL_DATA) mini-lskat.xpm $(kde_icondir)/locolor/16x16/apps/lskat.xpm
	$(mkinstalldirs) $(kde_icondir)/locolor/48x48/apps/
	$(INSTALL_DATA) large-lskat.xpm $(kde_icondir)/locolor/48x48/apps/lskat.xpm

uninstall-local:
#>- 	-rm -rf $(kde_htmldir)/en/lskat
#>+ 1
	-rm -rf $(DESTDIR)$(kde_htmldir)/en/lskat
#>- 	-rm -f $(kde_appsdir)/Games/lskat.desktop
#>+ 1
	-rm -f $(DESTDIR)$(kde_appsdir)/Games/lskat.desktop
#>- 	-rm -f $(kde_icondir)/locolor/16x16/apps/lskat.xpm
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/lskat.xpm
#>- 	-rm -f $(kde_icondir)/locolor/32x32/apps/lskat.xpm
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/lskat.xpm
#>- 	-rm -f $(kde_icondir)/locolor/48x48/apps/lskat.xpm
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/48x48/apps/lskat.xpm

# make messages.po. Move this one to ../po/ and "make merge" in po
# the -x is for skipping messages already translated in kdelibs
messages:
	$(XGETTEXT) -C -ki18n -x $(KDEDIR)/include/kde.pot `find . -name \*.h -o -name \*.cpp -o -name \*.cc` -o ../po/lskat.pot 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


#>+ 4
$(srcdir)/KEInput.cpp: KEInput.moc
KEInput.moc: $(srcdir)/KEInput.h
	$(MOC) $(srcdir)/KEInput.h -o KEInput.moc

#>+ 3
networkdlg.moc.cpp: $(srcdir)/networkdlg.h
	$(MOC) $(srcdir)/networkdlg.h -o networkdlg.moc.cpp

#>+ 4
$(srcdir)/KRemoteConnect.cpp: KRemoteConnect.moc
KRemoteConnect.moc: $(srcdir)/KRemoteConnect.h
	$(MOC) $(srcdir)/KRemoteConnect.h -o KRemoteConnect.moc

#>+ 3
aboutdlg.moc.cpp: $(srcdir)/aboutdlg.h
	$(MOC) $(srcdir)/aboutdlg.h -o aboutdlg.moc.cpp

#>+ 4
$(srcdir)/KInteractiveConnect.cpp: KInteractiveConnect.moc
KInteractiveConnect.moc: $(srcdir)/KInteractiveConnect.h
	$(MOC) $(srcdir)/KInteractiveConnect.h -o KInteractiveConnect.moc

#>+ 4
$(srcdir)/KProcessConnect.cpp: KProcessConnect.moc
KProcessConnect.moc: $(srcdir)/KProcessConnect.h
	$(MOC) $(srcdir)/KProcessConnect.h -o KProcessConnect.moc

#>+ 3
lskatdoc.moc.cpp: $(srcdir)/lskatdoc.h
	$(MOC) $(srcdir)/lskatdoc.h -o lskatdoc.moc.cpp

#>+ 4
$(srcdir)/KRSocket.cpp: KRSocket.moc
KRSocket.moc: $(srcdir)/KRSocket.h
	$(MOC) $(srcdir)/KRSocket.h -o KRSocket.moc

#>+ 3
namedlg.moc.cpp: $(srcdir)/namedlg.h
	$(MOC) $(srcdir)/namedlg.h -o namedlg.moc.cpp

#>+ 4
$(srcdir)/KChildConnect.cpp: KChildConnect.moc
KChildConnect.moc: $(srcdir)/KChildConnect.h
	$(MOC) $(srcdir)/KChildConnect.h -o KChildConnect.moc

#>+ 3
lskatview.moc.cpp: $(srcdir)/lskatview.h
	$(MOC) $(srcdir)/lskatview.h -o lskatview.moc.cpp

#>+ 3
msgdlg.moc.cpp: $(srcdir)/msgdlg.h
	$(MOC) $(srcdir)/msgdlg.h -o msgdlg.moc.cpp

#>+ 4
$(srcdir)/KInputChildProcess.cpp: KInputChildProcess.moc
KInputChildProcess.moc: $(srcdir)/KInputChildProcess.h
	$(MOC) $(srcdir)/KInputChildProcess.h -o KInputChildProcess.moc

#>+ 3
lskat.moc.cpp: $(srcdir)/lskat.h
	$(MOC) $(srcdir)/lskat.h -o lskat.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  KEInput.moc networkdlg.moc.cpp KRemoteConnect.moc aboutdlg.moc.cpp KInteractiveConnect.moc KProcessConnect.moc lskatdoc.moc.cpp KRSocket.moc namedlg.moc.cpp KChildConnect.moc lskatview.moc.cpp msgdlg.moc.cpp KInputChildProcess.moc lskat.moc.cpp

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps lskat/Makefile
	cd $(top_srcdir) && perl am_edit lskat-0.9/lskat/Makefile.in


#>+ 11
lskat.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/msgdlg.cpp $(srcdir)/aboutdlgdata.cpp $(srcdir)/aboutdlg.cpp $(srcdir)/networkdlg.cpp $(srcdir)/namedlg.cpp $(srcdir)/KRemoteConnect.cpp $(srcdir)/KRSocket.cpp $(srcdir)/KProcessConnect.cpp $(srcdir)/KMessageEntry.cpp $(srcdir)/KInteractiveConnect.cpp $(srcdir)/KInputChildProcess.cpp $(srcdir)/KEMessage.cpp $(srcdir)/KEInput.cpp $(srcdir)/KConnectEntry.cpp $(srcdir)/KChildConnect.cpp $(srcdir)/lskatview.cpp $(srcdir)/lskatdoc.cpp $(srcdir)/lskat.cpp $(srcdir)/main.cpp  networkdlg.moc.cpp aboutdlg.moc.cpp lskatdoc.moc.cpp namedlg.moc.cpp lskatview.moc.cpp msgdlg.moc.cpp lskat.moc.cpp KEInput.moc KRemoteConnect.moc KInteractiveConnect.moc KProcessConnect.moc KRSocket.moc KChildConnect.moc KInputChildProcess.moc 
	@echo 'creating lskat.all_cpp.cpp ...'; \
	rm -f lskat.all_cpp.files lskat.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> lskat.all_cpp.final; \
	for file in msgdlg.cpp aboutdlgdata.cpp aboutdlg.cpp networkdlg.cpp namedlg.cpp KRemoteConnect.cpp KRSocket.cpp KProcessConnect.cpp KMessageEntry.cpp KInteractiveConnect.cpp KInputChildProcess.cpp KEMessage.cpp KEInput.cpp KConnectEntry.cpp KChildConnect.cpp lskatview.cpp lskatdoc.cpp lskat.cpp main.cpp  networkdlg.moc.cpp aboutdlg.moc.cpp lskatdoc.moc.cpp namedlg.moc.cpp lskatview.moc.cpp msgdlg.moc.cpp lskat.moc.cpp; do \
	  echo "#include \"$$file\"" >> lskat.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> lskat.all_cpp.final; \
	done; \
	cat lskat.all_cpp.final lskat.all_cpp.files  > lskat.all_cpp.cpp; \
	rm -f lskat.all_cpp.final lskat.all_cpp.files

#>+ 3
clean-final:
	-rm -f lskat.all_cpp.cpp

#>+ 2
final:
	$(MAKE) lskat_OBJECTS="$(lskat_final_OBJECTS)" all-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean
